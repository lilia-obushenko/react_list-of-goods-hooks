{"version":3,"sources":["App.tsx","components/GoodsList/GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","props","goods","map","good","className","goodsFromServer","App","useState","isReversed","reverseList","NONE","sortType","sortList","checkOrder","reorderedGoods","visibleGoods","sort","current","next","LENGTH","length","ALPHABET","localeCompare","reverse","getReorderedGoods","type","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,4ECbQC,EAAuB,SAACC,GACnC,IAAQC,EAAUD,EAAVC,MAER,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OAERC,UAAU,qCAHZ,SAKGD,GAHIA,SDRFE,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGP,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAMQ,EAAU,WACrB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA6BF,mBAAST,EAASY,MAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAaF,IAAab,EAASY,MAAQF,EAE3CM,EAhCD,SACLb,EADK,GAGJ,IADCU,EACF,EADEA,SAAUH,EACZ,EADYA,WAENO,EAAY,YAAOd,GAmBzB,OAjBAc,EAAaC,MAAK,SAACC,EAASC,GAC1B,OAAQP,GACN,KAAKb,EAASqB,OACZ,OAAOF,EAAQG,OAASF,EAAKE,OAE/B,KAAKtB,EAASuB,SACZ,OAAOJ,EAAQK,cAAcJ,GAE/B,QACE,OAAO,MAITV,GACFO,EAAaQ,UAGRR,EASgBS,CACrBnB,EACA,CAAEM,WAAUH,eAWd,OACE,sBAAKJ,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEqB,KAAK,SACLrB,UAAWsB,IACT,iBACA,CAAE,WAAYf,IAAab,EAASuB,WAEtCM,QAhBe,kBAAMf,EAASd,EAASuB,WAUzC,iCAWA,wBACEI,KAAK,SACLrB,UAAWsB,IACT,oBACA,CAAE,WAAYf,IAAab,EAASqB,SAEtCQ,QA1Ba,kBAAMf,EAASd,EAASqB,SAoBvC,4BAWA,wBACEM,KAAK,SACLrB,UAAWsB,IACT,oBACA,CAAE,YAAalB,IAEjBmB,QAvCa,kBAAMlB,GAAaD,IAiClC,qBAWCK,GACC,wBACEY,KAAK,SACLrB,UAAU,4BACVuB,QA7CS,WACjBf,EAASd,EAASY,MAClBD,GAAY,IAwCN,sBAUJ,cAAC,EAAD,CAAWR,MAAOa,QEvHxBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9ccf1474.chunk.js","sourcesContent":["import { FC, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport cn from 'classnames';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ninterface ReorderOptions {\n  sortType: SortType,\n  isReversed: boolean,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((current, next) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return current.length - next.length;\n\n      case SortType.ALPHABET:\n        return current.localeCompare(next);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: FC = () => {\n  const [isReversed, reverseList] = useState(false);\n  const [sortType, sortList] = useState(SortType.NONE);\n\n  const checkOrder = sortType !== SortType.NONE || isReversed;\n\n  const reorderedGoods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  const reverseGoods = () => reverseList(!isReversed);\n  const sortByAlphabet = () => sortList(SortType.ALPHABET);\n  const sortByLength = () => sortList(SortType.LENGTH);\n  const resetOrder = () => {\n    sortList(SortType.NONE);\n    reverseList(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={reverseGoods}\n        >\n          Reverse\n        </button>\n\n        {checkOrder && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetOrder}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodsList goods={reorderedGoods} />\n    </div>\n  );\n};\n","import { FC } from 'react';\n\ninterface Props {\n  goods: string[]\n}\n\nexport const GoodsList: FC<Props> = (props) => {\n  const { goods } = props;\n\n  return (\n    <ul>\n      {goods.map(good => (\n        <li\n          data-cy=\"Good\"\n          key={good}\n          className=\"box column is-info is-rounded mb-2\"\n        >\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}